import telebot
import time
from telebot import types
from string import Template
from re import *

# –ù–∞–∑–Ω–∞—á–∞–µ–º –±–æ—Ç—É –Ω–∞—à —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot('1858986723:AAHq-n_dtq4QovlJ1s8lDGk6sbyVw2d-2MY')


inc_type = []  # –•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ —Ç–∏–ø –∑–∞—è–≤–∫–∏
cli_num = []  # –•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∑–∞—è–≤–∏—Ç–µ–ª—è
cli_mail = []  # –•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –ø–æ—á—Ç—É –∑–∞—è–≤–∏—Ç–µ–ª—è
hello_count = []  # –•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–º –Ω—É–∂–Ω–æ –ª–∏ –∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º


# –û—Å–Ω–æ–≤–Ω–æ–π —Ö–µ–Ω–¥–ª–µ—Ä –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Å—Ç—Ä–∞—Ç
@bot.message_handler(commands=['start'])
def statup(message):  # –ó–¥–æ—Ä–æ–≤–∞–µ–º—Å—è –∏ –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –∏–ª–∏ –ø–æ—á—Ç—É
    key1 = types.ReplyKeyboardMarkup(True, False)
    button_phone = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    key1.row(button_phone)
    key1.row('–í–≤–µ—Å—Ç–∏ –ø–æ—á—Ç—É')
    key1.one_time_keyboard = True
    if len(hello_count) == 0:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤–∞–ª–∏—Å—å –ª–∏ –º—ã —Ä–∞–Ω–µ–µ
        bot.send_message(message.chat.id,
                         "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —á–∞—Ç-–±–æ—Ç –°–¢–û "
                         "'–ì–∞—Ä–∞–∂ 1'. "
                         " –û—Ç–ø—Ä–∞–≤—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –ø–æ—á—Ç—É, —á—Ç–æ–± —è –ø–æ–Ω—è–ª, —á—Ç–æ –≤—ã —á–µ–ª–æ–≤–µ–∫".format(
                             message.from_user, bot.get_me()),
                         parse_mode='html', reply_markup=key1)

    elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        pre_main(message)

    else:
        bot.send_message(message.chat.id,
                         "–í—ã–±–µ—Ä–µ—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, —á—Ç–æ–± –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É ".format(
                             message.from_user, bot.get_me()),
                         parse_mode='html', reply_markup=key1)
    hello_count.insert(1, 1)  # –û—Ç–º–µ—á–∞–µ–º —Ñ–∞–∫—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è


@bot.message_handler(content_types=['text', 'contact'])  # –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
def phone_check(message):  # –£—Ç–æ—á–Ω—è–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ–º –æ–Ω —Å –Ω–∞–º–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
    if message.text == None:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º" —Ç–æ —Ç–µ–∫—Å –±—É–¥–µ—Ç None
        if message.contact.user_id == message.chat.id:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–π –ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –¥–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            cli_num.append(message.contact.phone_number)
            pre_main(message)
        else:
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!')
            statup(message)
    elif message.text == "–í–≤–µ—Å—Ç–∏ –ø–æ—á—Ç—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏":  # –ü–µ—Ä–µ–∫–∏–¥—ã–≤–∞–µ—Ç –Ω–∞ –≤–≤–æ–¥ –ø–æ—á—Ç—ã
        mail_check(message)
    elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        pre_main(message)
    else:
        statup(message)


def mail_check(message):  # –§—É–Ω–∫—Ü–∏—è –≤–≤–æ–¥–∞ –ø–æ—á—Ç—ã
    key1 = telebot.types.ReplyKeyboardMarkup(True, False)
    key1.row("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å")
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É ‚§µ')
    if message.text == '–í–≤–µ—Å—Ç–∏ –ø–æ—á—Ç—É –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏':
        bot.register_next_step_handler(message, mail_check2)
    elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        pre_main(message)


def mail_check2(message):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç—á—ã –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
    pattern = compile('(^|\s)[-a-z0-9_.]+@([-a-z0-9]+\.)+[a-z]{2,6}(\s|$)')  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –ø–∞—Ç—Ç–µ—Ä–∫
    is_valid = pattern.match(message.text)
    if is_valid:
        cli_mail.append(message.text)  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—É—é –ø–æ—á—Ç—É
        pre_main(message)
    elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        pre_main(message)
    else:
        bot.send_message(message.chat.id, "–ü–æ—á—Ç–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ.")
        statup(message)


def pre_main(message):  # –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    inc_type.clear()  # –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å —Ç–∏–ø–æ–º –∑–∞—è–≤–∫–∏
    key = types.ReplyKeyboardMarkup(True, False)
    key.row('–ù–∞—à–∏ —É—Å–ª—É–≥–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å', "–ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –∞–¥—Ä–µ—Å")
    key.row('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è', "–ú—ã –Ω–∞ –∫–∞—Ä—Ç–µ")
    key.row('–ù–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏')
    key.one_time_keyboard = True
    try:  # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —á—Ç–æ –∑–∞ –∏–Ω—Ü–µ–Ω—Ç
        bot.send_message(message.chat.id,
                         "–ò—Ç–∞–∫, {0.first_name}!, —á—Ç–æ —É –≤–∞—Å —Å–ª—É—á–∏–ª–æ—Å—å?.".format(
                             message.from_user, bot.get_me()),
                         parse_mode='html', reply_markup=key)
        print('No problem detected. Message send')
    except OSError:  # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —á—Ç–æ –∑–∞ –∏–Ω—Ü–µ–Ω—Ç –µ—Å–ª–∏ –ø—Ä–µ–¥–∏–¥—É—â–∏–π –≤—ã–∑–≤–∞–ª –æ—à–∏–±–∫—É —Ç–∞–π–º–∞—É—Ç–∞
        print("ConnectionError - Sending again after 5 seconds!!!")
        time.sleep(5)
        bot.send_message(message.chat.id,
                         "–ò—Ç–∞–∫, {0.first_name}, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?]?.".format(
                             message.from_user, bot.get_me()),
                         parse_mode='html', reply_markup=key)
        print('Problem solved')
    bot.register_next_step_handler(message, main)


def main(message):  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –∏ —É—Ç–æ—á–Ω—è–µ–º –µ–≥–æ –ø–æ–¥—Ç–∏–ø
    if message.text == '–ù–∞—à–∏ —É—Å–ª—É–≥–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å':
        bot.send_message(message.chat.id, '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º - –æ—Ç 500‚ÇΩ –¥–æ 1000‚ÇΩ''\n'
                                          '–ß–∏–ø-–¢—é–Ω–∏–Ω–≥ –ê–≤—Ç–æ–º–æ–±–∏–ª–µ–π: —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –º–æ—â–Ω–æ—Å—Ç–∏, –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –ï–≤—Ä–æ-2, '
                                          '–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ: EGR, DPF, EVAP, SCV, Adblue –∏ –ø—Ä. - –û—Ç 2000‚ÇΩ –¥–æ 30000‚ÇΩ''\n '
                                          '–ó–∞–º–µ–Ω–∞ –ì–†–ú, —Ä–µ–º–Ω–µ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞, –ø–æ–º–ø—ã (–≤–æ–¥—è–Ω–æ–≥–æ –Ω–∞—Å–æ—Å–∞), –º–∞—Å–ª–æ—Å—ä—ë–º–Ω—ã—Ö '
                                          '–∫–æ–ª–ø–∞—á–∫–æ–≤, –ø—Ä–æ–∫–ª–∞–¥–∫–∏ –∫–ª–∞–ø–∞–Ω–Ω–æ–π –∫—Ä—ã—à–∫–∏, —Å–∞–ª—å–Ω–∏–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–≤–∞–ª–∞, '
                                          '—Å–∞–ª—å–Ω–∏–∫–∞ –∫–æ–ª–µ–Ω–≤–∞–ª–∞, –ø—Ä–æ–∫–ª–∞–¥–∫–∏ –ì–ë–¶ (–ì–æ–ª–æ–≤–∫–∏ –±–ª–æ–∫–∞ —Ü–∏–ª–∏–Ω–¥—Ä–æ–≤). –û—Ç 1000‚ÇΩ''\n '
                                          '–†–µ–º–æ–Ω—Ç –ì–ë–¶ –æ—Ç 6000‚ÇΩ''\n'
                                          '–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ –∫–ª–∞–ø–∞–Ω–æ–≤ –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö –í–ê–ó, Renault, Datsun, Mitsubishi, '
                                          'Great Wall, Honda- –æ—Ç 1000‚ÇΩ –¥–æ 1500‚ÇΩ''\n '
                                          '–ü—Ä–æ–º—ã–≤–∫–∞ —Ñ–æ—Ä—Å—É–Ω–æ–∫/–∏–Ω–∂–µ–∫—Ç–æ—Ä–∞ –Ω–∞ —É–ª—å—Ç—Ä–∞–∑–≤—É–∫–æ–≤–æ–º —Å—Ç–µ–Ω–¥–µ –∏–ª–∏ –±–µ–∑ —Å–Ω—è—Ç–∏—è —Å '
                                          '–∞–≤—Ç–æ–º–æ–±–∏–ª—è - –æ—Ç 1000‚ÇΩ (—Å–Ω—è—Ç—ã–µ —Ñ–æ—Ä—Å—É–Ω–∫–∏) –¥–æ 3000‚ÇΩ''\n '
                                          '–†–µ–º–æ–Ω—Ç –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä–±—é—Ä–∞—Ç–æ—Ä–æ–≤, —Å–∏—Å—Ç–µ–º –∑–∞–∂–∏–≥–∞–Ω–∏—è. - –æ—Ç 500‚ÇΩ''\n')
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        bot.send_message(message.chat.id, '–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚§µ', reply_markup=keyboard)
    elif message.text == '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è':
        bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?')
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('–î–∞')
        bot.register_next_step_handler(message, user_reg)
    elif message.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –∞–¥—Ä–µ—Å':
        bot.send_message(message.chat.id, 'üì± +79610218408 –°–µ—Ä–≥–µ–π''\n'
                                          'üì± +79056379476 –ù–∏–∫–∏—Ç–∞''\n'
                                          '–≥. –Ø—Ä–æ—Å–ª–∞–≤–ª—å, –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç 25–ê, –ë–æ–∫—Å ‚Ññ1')
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        keyboard.one_time_keyboard = True
        bot.send_message(message.chat.id, '–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚§µ', reply_markup=keyboard)
    elif message.text == '–ù–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏':
        key = types.InlineKeyboardMarkup(row_width=2)
        inst = types.InlineKeyboardButton(text='Instagram', url='https://instagram.com/garage1_yar')
        vk = types.InlineKeyboardButton(text='Vkontakte', url='https://vk.com/garage1_yar')
        avito = types.InlineKeyboardButton(text='Avito', url='https://www.avito.ru/user/2ff12a1824cec4ae791ce715ef78ec7a/profile?src=sharing')
        yandex = types.InlineKeyboardButton(text='Yandex', url='https://uslugi.yandex.ru/profile/Garazh1-254534')
        key.add(inst, vk, avito, yandex)
        bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ", reply_markup=key)

        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        keyboard.one_time_keyboard = True
        bot.send_message(message.chat.id, '–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚§µ', reply_markup=keyboard)
    elif message.text == '–ú—ã –Ω–∞ –∫–∞—Ä—Ç–µ':
        bot.send_location(message.chat.id, 57.671202, 39.828057)
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        keyboard.one_time_keyboard = True
        bot.send_message(message.chat.id, '–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚§µ', reply_markup=keyboard)

    else:
        bot.send_message(message.chat.id, 'üö´ –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ üö´')
        pre_main(message)


user_dict = {}


class User:
    def __init__(self, city):
        self.city = city

        keys = ['fullname', 'phone', 'driverSeria',
                'driverNumber', 'driverDate', 'car',
                'carModel', 'carColor', 'carNumber', 'carDate']

        for key in keys:
            self.key = None


def user_reg(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
    keyboard.row('–Ø—Ä–æ—Å–ª–∞–≤–ª—å')
    keyboard.row('–†—ã–±–∏–Ω—Å–∫')
    keyboard.row('–¢—É—Ç–∞–µ–≤')
    keyboard.row('–ö–æ—Å—Ç—Ä–æ–º–∞')
    keyboard.row('–ò–≤–∞–Ω–æ–≤–æ')
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ ‚§µ', reply_markup=keyboard)
    bot.register_next_step_handler(msg, process_city_step)


def process_city_step(message):
    try:
        chat_id = message.chat.id
        user_dict[chat_id] = User(message.text)

        # —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        markup = types.ReplyKeyboardRemove(selective=False)

        msg = bot.send_message(chat_id, '–ö–∞–∫ –∫ –≤–∞–º –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?', reply_markup=markup)
        bot.register_next_step_handler(msg, process_fullname_step)

    except Exception as e:
        bot.reply_to(message, 'ooops!!')


def process_fullname_step(message):
    try:
        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.fullname = message.text

        msg = bot.send_message(chat_id, '–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏')
        bot.register_next_step_handler(msg, process_phone_step)

    except Exception as e:
        bot.reply_to(message, 'ooops!!')


def process_phone_step(message):
    try:
        int(message.text)

        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.phone = message.text

        msg = bot.send_message(chat_id, '–ú–∞—Ä–∫–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è')
        bot.register_next_step_handler(msg, process_driverSeria_step)

    except Exception as e:
        msg = bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ —Ç–æ –¥—Ä—É–≥–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.')
        bot.register_next_step_handler(msg, process_phone_step)


def process_driverSeria_step(message):
    try:
        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.driverSeria = message.text

        msg = bot.send_message(chat_id, '–ú–æ–¥–µ–ª—å –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è')
        bot.register_next_step_handler(msg, process_driverNumber_step)

    except Exception as e:
        bot.reply_to(message, 'ooops!!')


def process_driverNumber_step(message):
    try:
        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.driverNumber = message.text

        msg = bot.send_message(chat_id, '–¢–∏–ø –∫–ø–ø, –æ–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è')
        bot.register_next_step_handler(msg, process_driverDate_step)

    except Exception as e:
        bot.reply_to(message, 'ooops!!')


def process_driverDate_step(message):
    try:
        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.driverDate = message.text

        msg = bot.send_message(chat_id, '–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞')
        bot.register_next_step_handler(msg, process_car_step)

    except Exception as e:
        bot.reply_to(message, 'ooops!!')


def process_car_step(message):
    try:
        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.car = message.text

        msg = bot.send_message(chat_id, '–£–∫–∞–∂–∏—Ç–µ –∫–∞–∫–∞—è —É—Å–ª—É–≥–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç')
        bot.register_next_step_handler(msg, process_carColor_step)

    except Exception as e:
        bot.reply_to(message, 'ooops!!')


def process_carColor_step(message):
    try:
        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.carModel = message.text

        msg = bot.send_message(chat_id, '–£–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏ - –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–∞—Ç–∞(—á–∏—Å–ª–æ), –≤—Ä–µ–º—è?')
        bot.register_next_step_handler(msg, process_carNumber_step)

    except Exception as e:
        bot.reply_to(message, 'ooops!!')


def process_carNumber_step(message):
    try:
        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.carNumber = message.text

        msg = bot.send_message(chat_id, '–ö–æ–≥–¥–∞ –≤–∞–º –º–æ–∂–Ω–æ –ø–æ–∑–≤–æ–Ω–∏—Ç—å?')
        bot.register_next_step_handler(msg, process_carDate_step)

    except Exception as e:
        bot.reply_to(message, 'ooops!!')


def process_carDate_step(message):
    try:
        chat_id = message.chat.id
        user = user_dict[chat_id]
        user.carDate = message.text

        # –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        bot.send_message(chat_id, getRegData(user, '–í–∞—à–∞ –∑–∞—è–≤–∫–∞', message.from_user.first_name), parse_mode="Markdown")
        # –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É
        bot.send_message('-535132227', getRegData(user, '–ó–∞—è–≤–∫–∞ –æ—Ç –±–æ—Ç–∞', bot.get_me().username),
                         parse_mode="Markdown")

    except Exception as e:
        bot.reply_to(message, 'ooops!!')


# —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –≤–∏–¥ –∑–∞—è–≤–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
# –Ω–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ Template
# –≤ send_message –¥–æ–ª–∂–Ω–æ —Å—Ç–æ—è—Ç—å parse_mode="Markdown"
def getRegData(user, title, name):
    t = Template(
        '$title *$name* \n –ì–æ—Ä–æ–¥: *$userCity* \n –û–±—Ä–∞—â–µ–Ω–∏–µ: *$fullname* \n –¢–µ–ª–µ—Ñ–æ–Ω: *$phone*\n –¢–µ–ª–µ—Ñ–æ–Ω –ø—Ä–∏ '
        '–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: *$phoneUM* \n –ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è: *$driverSeria* \n –ú–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è: *$driverNumber* \n –¢–∏–ø –∫–ø–ø '
        '–∏ –æ–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è: *$driverDate* \n –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: *$car* \n –£—Å–ª—É–≥–∞: *$carModel* \n –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è '
        '–∑–∞–ø–∏—Å–∏: *$carNumber* \n –ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É: *$carDate* \n –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É, –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ '
        '–±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!')

    return t.substitute({
        'title': title,
        'name': name,
        'userCity': user.city,
        'fullname': user.fullname,
        'phone': user.phone,
        'phoneUM': cli_num,
        'driverSeria': user.driverSeria,
        'driverNumber': user.driverNumber,
        'driverDate': user.driverDate,
        'car': user.car,
        'carModel': user.carModel,
        'carNumber': user.carNumber,
        'carDate': user.carDate,
    })


while True:  # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    try:
        bot.polling(none_stop=True)
    except OSError:
        bot.polling(none_stop=True)
